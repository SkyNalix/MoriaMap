Au lancement de programme (réseau et horaires donnés en args au lancement):
en boucle
- proposer action
- après choix action, prendre entrée nécessaire
- traiter action

Actions proposés à user -> query:
1 - trajet non opti entre deux ARRETS [PLAN_0]
2 - horaires de passages pour un ARRET [LECT_TIME]
3 - trajet opti entre deux ARRETS [PLAN_1]
4 - trajet opti entre deux POINTS GEOGRAPHIQUES [PLAN_2]
5 - trajet opti entre deux POINTS GEOGRAPHIQUES avec possible section
    intermediaire à pied [PLAN_3]

Entrée/query:
1 - arrêt src et dst  -> (String, String)
                     <=> (nom src, nom dst)
2 - stop              ->  String
                     <=>  nom arrêt
3 - arrêt src et dst  -> (String, String, String)
                     <=> (nom src, nom dst, heure de départ)
4 - points src et dst -> (String, String, String)
                     <=> (gps src, gps dst, heure de départ)
5 - points src et dst -> (String, String, String)
                     <=> (gps src, gps dst,  heure de départ)

1ère idée: OUTDATED
Dans Navigator (n'existera pas)
 + processQuery(Query) qui check le type de query et appelle une methode private
   correspondant au type de query

2ème idée:
Query est une interface, avec une méthode execute(TransportNetwork), voir
diagramme.
